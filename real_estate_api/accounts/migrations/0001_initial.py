# Generated by Django 2.0 on 2018-12-24 20:24

import accounts.managers
import cloudinary.models
from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=120, unique=True)),
                ('authy_id', models.CharField(max_length=250)),
                ('password', models.CharField(max_length=250)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('phone_number_verified', models.BooleanField(default=False)),
                ('contact_number', models.CharField(max_length=250)),
                ('is_property_owner', models.BooleanField(default=False)),
                ('is_agent', models.BooleanField(default=False)),
                ('is_developer', models.BooleanField(default=False)),
                ('is_institute', models.BooleanField(default=False)),
                ('is_government', models.BooleanField(default=False)),
                ('is_customer', models.BooleanField(default=False)),
                ('is_hotelier', models.BooleanField(default=False)),
                ('is_valuer', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_supplier', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', accounts.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AgentInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250)),
                ('cac_number', models.IntegerField()),
                ('office_address', models.CharField(max_length=250)),
                ('work_identity', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('profile_picture', cloudinary.models.CloudinaryField(default='/avatar/customer.png', max_length=255, verbose_name='images')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, null=True, srid=4326)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agent', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250)),
                ('contact_address', models.CharField(blank=True, max_length=150)),
                ('notify', models.BooleanField(default=False)),
                ('profile_picture', cloudinary.models.CloudinaryField(default='/avatar/customer.png', max_length=255, verbose_name='images')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DeveloperInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250)),
                ('cac_number', models.IntegerField()),
                ('office_address', models.CharField(max_length=250)),
                ('work_identity', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('profile_picture', cloudinary.models.CloudinaryField(default='/avatar/customer.png', max_length=255, verbose_name='images')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, null=True, srid=4326)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='developer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GovernmentInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250)),
                ('cac_number', models.IntegerField()),
                ('office_address', models.CharField(max_length=250)),
                ('work_identity', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('profile_picture', cloudinary.models.CloudinaryField(default='/avatar/customer.png', max_length=255, verbose_name='images')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, null=True, srid=4326)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='government', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HotelInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_name', models.CharField(max_length=25, unique=True)),
                ('cac_number', models.IntegerField(unique=True)),
                ('hotel_website', models.URLField(blank=True, unique=True)),
                ('address', models.CharField(max_length=250)),
                ('city', models.CharField(default='', max_length=250)),
                ('state', models.CharField(default='', max_length=250)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, null=True, srid=4326)),
                ('work_identity', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('profile_picture', cloudinary.models.CloudinaryField(default='/avatar/customer.png', max_length=255, verbose_name='images')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='hotelier', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute_name', models.CharField(max_length=250)),
                ('institute_address', models.CharField(max_length=250)),
                ('cac_number', models.CharField(max_length=250)),
                ('work_identity', cloudinary.models.CloudinaryField(max_length=255, verbose_name='images')),
                ('website', models.URLField(blank=True)),
                ('profile_picture', cloudinary.models.CloudinaryField(default='/avatar/customer.png', max_length=255, verbose_name='images')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='institute', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyOwnerInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250)),
                ('contact_address', models.CharField(max_length=250)),
                ('profile_picture', cloudinary.models.CloudinaryField(default='/avatar/customer.png', max_length=255, verbose_name='images')),
                ('gender', models.CharField(max_length=250)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250)),
                ('cac_number', models.IntegerField()),
                ('office_address', models.CharField(max_length=250)),
                ('work_identity', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('profile_picture', cloudinary.models.CloudinaryField(default='/avatar/customer.png', max_length=255, verbose_name='images')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, null=True, srid=4326)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='supplier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserPortFolio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250)),
                ('contact_address', models.CharField(max_length=250)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=250)),
                ('professional_summary', models.TextField()),
                ('education', models.TextField()),
                ('work_experince', models.TextField()),
                ('skill_set', models.TextField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Valuer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250)),
                ('cac_number', models.IntegerField()),
                ('office_address', models.CharField(max_length=250)),
                ('work_identity', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('profile_picture', cloudinary.models.CloudinaryField(default='/avatar/customer.png', max_length=255, verbose_name='images')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, null=True, srid=4326)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='valuer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
